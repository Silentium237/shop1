{"version":3,"sources":["assets/img/pizza-logo.svg","assets/img/empty-cart.png","components/Button.jsx","components/Header.jsx","components/Categories.jsx","components/SortPopup.jsx","components/CartItem.jsx","components/PizzaBlock/PizzaBlock.jsx","components/PizzaBlock/LoadingBlock.jsx","redux/actions/pizzas.js","pages/Home.jsx","redux/actions/filters.js","pages/Cart.jsx","redux/actions/cart.js","App.js","redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","onClick","className","outline","children","classNames","Header","useSelector","cart","totalPrice","totalCount","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","activeCategory","items","onClickCategory","map","name","index","key","defaultProps","SortPopup","activeSortType","onClickSortType","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","obj","type","handleOutsideClick","event","path","composedPath","includes","current","useEffect","document","body","addEventListener","ref","onSelectItem","CartItem","id","size","onRemove","onMinus","onPlus","PizzaBlock","imageUrl","price","types","sizes","onClickAddPizza","addedCount","availableTypes","availableSizes","activeType","setActiveType","activeSize","setActiveSize","onSelectType","active","disabled","onSelectSize","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","setPizzas","payload","categoryNames","sortIems","order","Home","dispatch","useDispatch","pizzas","cartItems","isLoaded","filters","category","sortBy","axios","get","then","data","fetchPizzas","onSelectCategory","useCallback","onSelectSortType","handleAddPizzaToCart","length","Array","_","Cart","addedPizzas","Object","keys","onRemoveItem","window","confirm","removeCartItem","onPlusItem","plusCartItem","onMinusItem","minusCartItem","href","console","log","cartEmptyImage","App","component","exact","initialState","filtersReducer","state","action","pizzasReducer","getTotalPrice","arr","reduce","sum","getTotalSum","values","split","firstKey","val","_get","currentPizzaItems","newItems","currentTotalPrice","currentTotalCount","newObjItems","oldItems","slice","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,8JCc5BC,MAXf,YAA0D,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,SAC3C,OACJ,4BACIH,QAASA,EACTC,UAAWG,IAAW,SAAUH,EAAW,CAC3C,kBAAmBC,KAElBC,I,gCCuDUE,MA1Df,WAAmB,IAAD,EACqBC,aAAY,qBAAGC,QAA1CC,EADM,EACNA,WAAYC,EADN,EACMA,WAEpB,OACI,yBAAKR,UAAU,UACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMS,GAAG,KACL,yBAAKT,UAAU,gBACX,yBAAKU,MAAM,KAAKC,IAAKC,IAASC,IAAI,eAClC,6BACI,2CACA,8MAKZ,yBAAKb,UAAU,gBACX,kBAAC,IAAD,CAAMS,GAAG,SACL,kBAAC,EAAD,CAAQT,UAAU,gBACd,8BAAOO,EAAP,WACA,yBAAKP,UAAU,sBACf,yBACIU,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAGvB,8BAAOd,SCpD7Be,EAAaC,IAAMC,MAAK,YAAiE,IAA3CC,EAA0C,EAA1CA,eAAgBC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAEvE,OACI,6BACI,yBAAK5B,UAAU,cACX,4BACI,wBAAIA,UAA8B,OAAnB0B,EAA0B,SAAW,GAAI3B,QAAS,kBAAK6B,EAAgB,QAAtF,sBAGCD,GACDA,EAAME,KAAI,SAACC,EAAMC,GAAP,OACN,wBACI/B,UAAW0B,IAAmBK,EAAQ,SAAW,GACjDhC,QAAS,kBAAK6B,EAAgBG,IAC9BC,IAAG,UAAKF,EAAL,YAAaC,IACfD,YAe7BP,EAAWU,aAAe,CAACP,eAAgB,KAAMC,MAAO,IACzCJ,Q,QChCTW,EAAYV,IAAMC,MAAK,YAAgE,IAA3CE,EAA0C,EAA1CA,MAAOQ,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,gBAAmB,EAChDZ,IAAMa,UAAS,GADiC,mBACjFC,EADiF,KACnEC,EADmE,KAElFC,EAAUhB,IAAMiB,SAChBC,EAAcf,EAAMgB,MAAK,SAACC,GAAD,OAASA,EAAIC,OAASV,KAAgBL,KAM/DgB,EAAqB,SAACC,IACXA,EAAMC,MAASD,EAAME,cAAgBF,EAAME,gBAC9CC,SAASV,EAAQW,UACvBZ,GAAgB,IAexB,OAJAf,IAAM4B,WAAU,WACZC,SAASC,KAAKC,iBAAiB,QAAST,KACzC,IAGC,yBAAKU,IAAKhB,EAASxC,UAAU,QACzB,yBAAKA,UAAU,eACX,yBACIA,UAAWsC,EAAe,UAAY,GACtC5B,MAAM,KACNI,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,4WACFF,KAAK,aAGb,yGACA,0BAAMjB,QAtCS,WACvBwC,GAAiBD,KAqC2BI,IAEvCJ,GACG,yBAAKtC,UAAU,eACX,4BACK2B,GACDA,EAAME,KAAI,SAACe,EAAKb,GAAN,OACN,wBACIhC,QAAS,kBAnChB,SAACgC,GACdK,GACAA,EAAgBL,GAEpBQ,GAAgB,GA+BuBkB,CAAab,IAC5B5C,UAAWmC,IAAmBS,EAAIC,KAAO,SAAW,GACpDb,IAAG,UAAKY,EAAIC,KAAT,YAAiBd,IACnBa,EAAId,eAgBrCI,EAAUD,aAAe,CACrBN,MAAO,IAGIO,QCqBAwB,EA/FE,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,GAAI7B,EAA0E,EAA1EA,KAAMe,EAAoE,EAApEA,KAAMe,EAA8D,EAA9DA,KAAMrD,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,WAAYqD,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAajF,OACI,yBAAK/D,UAAU,cACX,yBAAKA,UAAU,kBACX,yBACIA,UAAU,qBACVW,IAAI,4GACJE,IAAI,WAGZ,yBAAKb,UAAU,mBACX,4BAAK8B,GACL,2BACKe,EADL,oCACmBe,EADnB,mBAIJ,yBAAK5D,UAAU,oBACX,yBACID,QArBQ,WACpB+D,EAAQH,IAqBI3D,UAAU,gEACV,yBACIU,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,qNACFF,KAAK,YAET,0BACIE,EAAE,gUACFF,KAAK,cAIjB,2BAAIR,GACJ,yBACIT,QA7CO,WACnBgE,EAAOJ,IA6CK3D,UAAU,+DACV,yBACIU,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,qNACFF,KAAK,YAET,0BACIE,EAAE,gUACFF,KAAK,eAKrB,yBAAKhB,UAAU,oBACX,2BAAIO,EAAJ,YAEJ,yBAAKP,UAAU,qBACX,kBAAC,EAAD,CAAQD,QAxEM,WACtB8D,EAASF,IAuEmC3D,UAAU,iBAAiBC,SAAO,GAClE,yBACIS,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,qNACFF,KAAK,YAET,0BACIE,EAAE,gUACFF,KAAK,iBCpFjC,SAASgD,EAAT,GAA+F,IAAzEL,EAAwE,EAAxEA,GAAI7B,EAAoE,EAApEA,KAAMmC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WACtEC,EAAiB,CAAC,uCAAU,4EAC5BC,EAAiB,CAAC,GAAI,GAAI,IAF0D,EAItDhD,IAAMa,SAAS8B,EAAM,IAJiC,mBAInFM,EAJmF,KAIvEC,EAJuE,OAKtDlD,IAAMa,SAAS,GALuC,mBAKnFsC,EALmF,KAKvEC,EALuE,KA2B1F,OACI,yBAAK5E,UAAU,eACX,yBAAKA,UAAU,qBAAqBW,IAAKsD,EAAUpD,IAAI,UACvD,wBAAIb,UAAU,sBAAsB8B,GACpC,yBAAK9B,UAAU,yBACX,4BACKuE,EAAe1C,KAAI,SAACgB,EAAMd,GAAP,OAChB,wBACIC,IAAKa,EACL9C,QAAS,kBA7BZ,SAACgC,GAClB2C,EAAc3C,GA4BqB8C,CAAa9C,IAC5B/B,UAAWG,IAAW,CAClB2E,OAAQL,IAAe1C,EACvBgD,UAAWZ,EAAMjB,SAASnB,MAE7Bc,OAIb,4BACK2B,EAAe3C,KAAI,SAAC+B,EAAM7B,GAAP,OAChB,wBACIC,IAAK4B,EACL7D,QAAS,kBAtCZ,SAACgC,GAClB6C,EAAc7C,GAqCqBiD,CAAajD,IAC5B/B,UAAWG,IAAW,CAClB2E,OAAQH,IAAe5C,EACvBgD,UAAWX,EAAMlB,SAASU,MAE7BA,EAPL,uBAYZ,yBAAK5D,UAAU,uBACX,yBAAKA,UAAU,sBAAf,gBAAwCkE,EAAxC,WACA,kBAAC,EAAD,CAAQnE,QA9CD,WACf,IAAM6C,EAAM,CACRe,KACA7B,OACAmC,WACAC,QACAN,KAAMY,EAAeG,GACrB9B,KAAM0B,EAAeE,IAEzBJ,EAAgBzB,IAqCqB5C,UAAU,cAAcC,SAAO,GACxD,yBACIS,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,2QACFF,KAAK,WAGb,kFACCsD,GAAc,2BAAIA,MAiBvCN,EAAW/B,aAAe,CACtBH,KAAM,MACNoC,MAAO,EACPC,MAAO,GACPC,MAAO,IAGIJ,Q,QCjFAiB,MAnBf,WACI,OACI,kBAAC,IAAD,CACIjF,UAAU,cACVkF,MAAO,EACPxE,MAAO,IACPI,OAAQ,IACRC,QAAQ,cACRoE,gBAAgB,UAChBC,gBAAgB,WAEhB,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAC5B,0BAAMC,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjF,MAAM,MAAMI,OAAO,OACrD,0BAAM0E,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjF,MAAM,MAAMI,OAAO,OACrD,0BAAM0E,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjF,MAAM,KAAKI,OAAO,OACpD,0BAAM0E,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjF,MAAM,MAAMI,OAAO,S,iBCMxD8E,EAAY,SAACjE,GAAD,MAAY,CACjCkB,KAAM,aACNgD,QAASlE,ICjBPmE,EAAgB,CAAC,uCAAU,uFAAkB,iCAAS,uCAAU,oDAChEC,EAAW,CACb,CAAEjE,KAAM,2EAAgBe,KAAM,UAAWmD,MAAO,QAChD,CAAElE,KAAM,2BAAQe,KAAM,QAASmD,MAAO,QACtC,CAAElE,KAAM,6CAAWe,KAAM,OAAQmD,MAAO,QA8D7BC,MA3Df,WACI,IAAMC,EAAWC,cACXxE,EAAQtB,aAAY,qBAAG+F,OAAoBzE,SAC3C0E,EAAYhG,aAAY,qBAAGC,KAAgBqB,SAC3C2E,EAAWjG,aAAY,qBAAG+F,OAAoBE,YAJxC,EAKiBjG,aAAY,qBAAGkG,WAApCC,EALI,EAKJA,SAAUC,EALN,EAKMA,OAElBjF,IAAM4B,WAAU,WACZ8C,EDjBmB,SAACO,EAAQD,GAAT,OAAsB,SAACN,GAC9CA,EAAS,CACLrD,KAAM,aACNgD,SAAS,IAGba,IACKC,IADL,uCAEqD,OAAbH,EAAA,mBAAgCA,GAAa,GAFrF,kBAEiGC,EAAO5D,KAFxG,mBAGY4D,EAAOT,QAGdY,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLX,EAASN,EAAUiB,QCIdC,CAAYL,EAAQD,MAC9B,CAACA,EAAUC,IAEd,IAAMM,EAAmBvF,IAAMwF,aAAY,SAACjF,GACxCmE,ECvBkC,CACtCrD,KAAM,eACNgD,QDqByB9D,MACtB,IAEGkF,EAAmBzF,IAAMwF,aAAY,SAACnE,GC/BvB,IAAC,EDgClBqD,EChCqC,CACzCrD,KAAM,cACNgD,QAAS,CAAChD,MAFY,EDgCCA,GChCAA,KAEPmD,MAFK,EAAQA,WDiC1B,IAEGkB,EAAuB,SAACtE,GAC1BsD,EAAS,CACLrD,KAAM,iBACNgD,QAASjD,KAIjB,OACI,yBAAK5C,UAAU,aACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CACI0B,eAAgB8E,EAChB5E,gBAAiBmF,EACjBpF,MAAOmE,IAEX,kBAAC,EAAD,CACI3D,eAAgBsE,EAAO5D,KACvBlB,MAAOoE,EACP3D,gBAAiB6E,KAGzB,wBAAIjH,UAAU,kBAAd,qDACA,yBAAKA,UAAU,kBACVsG,EACK3E,EAAME,KAAI,SAACe,GAAD,OACR,kBAAC,EAAD,eACIyB,gBAAiB6C,EACjBlF,IAAKY,EAAIe,GACTW,WAAY+B,EAAUzD,EAAIe,KAAO0C,EAAUzD,EAAIe,IAAIhC,MAAMwF,QACrDvE,OAGVwE,MAAM,IACHpG,KAAK,GACLa,KAAI,SAACwF,EAAGtF,GAAJ,OAAc,kBAAC,EAAD,CAAmBC,IAAKD,U,iBEsHpDuF,MAnLf,WACI,IAAMpB,EAAWC,cADL,EAE8B9F,aAAY,qBAAGC,QAAjDC,EAFI,EAEJA,WAAYC,EAFR,EAEQA,WAAYmB,EAFpB,EAEoBA,MAE1B4F,EAAcC,OAAOC,KAAK9F,GAAOE,KAAI,SAACG,GACxC,OAAOL,EAAMK,GAAKL,MAAM,MAStB+F,EAAe,SAAC/D,GACdgE,OAAOC,QAAQ,iLACf1B,ECfkB,SAACvC,GAAD,MAAS,CACnCd,KAAM,mBACNgD,QAASlC,GDaQkE,CAAelE,KAI1BmE,EAAa,SAACnE,GAChBuC,ECfoB,SAACvC,GAAD,MAAS,CACjCd,KAAM,iBACNgD,QAASlC,GDaIoE,CAAapE,KAGpBqE,EAAc,SAACrE,GACjBuC,ECdqB,SAACvC,GAAD,MAAS,CAClCd,KAAM,kBACNgD,QAASlC,GDYIsE,CAActE,KAO3B,OACI,yBAAK3D,UAAU,6BACVQ,EACG,yBAAKR,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACV,yBACIU,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WA1B3B,8CA+BA,yBAAKtB,UAAU,eACX,yBACIU,MAAM,KACNI,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,sBACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,4dACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,2BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEnB,0BACIJ,EAAE,2BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAIvB,0BAAMvB,QAjGV,WACZ4H,OAAOC,QAAQ,kOACf1B,ECboB,CAC5BrD,KAAM,iBD2GkB,iGAGR,yBAAK7C,UAAU,kBACVuH,EAAY1F,KAAI,SAACe,GAAD,OACb,kBAAC,EAAD,CACIZ,IAAKY,EAAIe,GACTA,GAAIf,EAAIe,GACR7B,KAAMc,EAAId,KACVe,KAAMD,EAAIC,KACVe,KAAMhB,EAAIgB,KACVrD,WAAYoB,EAAMiB,EAAIe,IAAIpD,WAC1BC,WAAYmB,EAAMiB,EAAIe,IAAIhC,MAAMwF,OAChCtD,SAAU6D,EACV5D,QAASkE,EACTjE,OAAQ+D,QAIpB,yBAAK9H,UAAU,gBACX,yBAAKA,UAAU,wBACzB,0FACc,2BAAIQ,EAAJ,mBAEA,sGACE,2BAAID,EAAJ,aAGN,yBAAKP,UAAU,wBACX,uBAAGkI,KAAK,IAAIlI,UAAU,kDAClB,yBACIU,MAAM,IACNI,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,8BACN,0BACIC,EAAE,4BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAGvB,kBAAC,IAAD,CAAMb,GAAG,KACL,yHAGR,kBAAC,EAAD,CAAQV,QA7HX,WACjBoI,QAAQC,IAAI,oDAAazG,IA4H0B3B,UAAU,WACrC,2HAMhB,yBAAKA,UAAU,oBACX,+GACmB,4CAEnB,8PAEI,6BAFJ,qTAKA,yBAAKW,IAAK0H,IAAgBxH,IAAI,eAC9B,kBAAC,IAAD,CAAMJ,GAAG,IAAIT,UAAU,wBACnB,2H,OEnKTsI,MAXf,WACQ,OACA,yBAAKtI,UAAU,WACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAOgD,KAAK,IAAIuF,UAAWtC,EAAMuC,OAAK,IACtC,kBAAC,IAAD,CAAOxF,KAAK,QAAQuF,UAAWjB,EAAMkB,OAAK,O,uBCXpDC,EAAe,CACjBjC,SAAU,KACVC,OAAQ,CACJ5D,KAAM,UACNmD,MAAO,SAoBA0C,EAhBQ,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACrD,MAAoB,gBAAhBA,EAAO/F,KACA,2BACA8F,GADP,IAEIlC,OAAQmC,EAAO/C,UAGH,iBAAhB+C,EAAO/F,KACA,2BACA8F,GADP,IAEInC,SAAUoC,EAAO/C,UAGlB8C,GCrBLF,EAAe,CACjB9G,MAAO,GACP2E,UAAU,GAgBCuC,EAZO,WAAmC,IAAlCF,EAAiC,uDAAzBF,EAAcG,EAAW,uCACpD,MAAoB,eAAhBA,EAAO/F,KACA,2BACA8F,GADP,IAEIhH,MAAOiH,EAAO/C,QACdS,UAAU,IAIXqC,G,wBCfLF,EAAe,CACjB9G,MAAO,GACPpB,WAAY,EACZC,WAAY,GAGVsI,EAAgB,SAACC,GAAD,OAASA,EAAIC,QAAO,SAACC,EAAKrG,GAAN,OAAcA,EAAIsB,MAAQ+E,IAAK,IASnEC,EAAc,SAACtG,EAAKI,GACtB,OAAOwE,OAAO2B,OAAOvG,GAAKoG,QAAO,SAACC,EAAKrG,GAEnC,OAAOqG,EAVF,SAACrG,EAAKI,GAAU,IAAD,EACIA,EAAKoG,MAAM,KADf,iBACjBC,EADiB,KAExB,OAFwB,WAEZL,QAAO,SAACM,EAAKtH,GACrB,OAAOsH,EAAItH,KACZY,EAAIyG,IAKWE,CAAK3G,EAAKI,KAEzB,IAmGQ1C,EAhGF,WAAmC,IAAlCqI,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC3C,OAAQA,EAAO/F,MACX,IAAK,iBACD,IAAM2G,EAAqBb,EAAMhH,MAAMiH,EAAO/C,QAAQlC,IAA5B,sBAEhBgF,EAAMhH,MAAMiH,EAAO/C,QAAQlC,IAAIhC,OAFf,CAEsBiH,EAAO/C,UADjD,CAAC+C,EAAO/C,SAGR4D,EAAQ,2BACPd,EAAMhH,OADC,kBAETiH,EAAO/C,QAAQlC,GAAK,CACjBhC,MAAO6H,EACPjJ,WAAYuI,EAAcU,MAI5BhJ,EAAa0I,EAAYO,EAAU,gBACnClJ,EAAa2I,EAAYO,EAAU,cAEzC,OAAO,2BACAd,GADP,IAEIhH,MAAO8H,EACPjJ,aACAD,eAIR,IAAK,mBACD,IAAMkJ,EAAQ,eACPd,EAAMhH,OAEP+H,EAAoBD,EAASb,EAAO/C,SAAStF,WAC7CoJ,EAAoBF,EAASb,EAAO/C,SAASlE,MAAMwF,OAEzD,cADOsC,EAASb,EAAO/C,SAChB,2BACA8C,GADP,IAEIhH,MAAO8H,EACPlJ,WAAYoI,EAAMpI,WAAamJ,EAC/BlJ,WAAYmI,EAAMnI,WAAamJ,IAIvC,IAAK,iBACD,IAAMC,EAAW,sBACVjB,EAAMhH,MAAMiH,EAAO/C,SAASlE,OADlB,CAEbgH,EAAMhH,MAAMiH,EAAO/C,SAASlE,MAAM,KAEhC8H,EAAQ,2BACPd,EAAMhH,OADC,kBAETiH,EAAO/C,QAAU,CACdlE,MAAOiI,EACPrJ,WAAYuI,EAAcc,MAI5BpJ,EAAa0I,EAAYO,EAAU,gBACnClJ,EAAa2I,EAAYO,EAAU,cAEzC,OAAO,2BACAd,GADP,IAEIhH,MAAO8H,EACPjJ,aACAD,eAIR,IAAK,kBACD,IAAMsJ,EAAWlB,EAAMhH,MAAMiH,EAAO/C,SAASlE,MACvCiI,EACFC,EAAS1C,OAAS,EAAIwB,EAAMhH,MAAMiH,EAAO/C,SAASlE,MAAMmI,MAAM,GAAKD,EACjEJ,EAAQ,2BACPd,EAAMhH,OADC,kBAETiH,EAAO/C,QAAU,CACdlE,MAAOiI,EACPrJ,WAAYuI,EAAcc,MAI5BpJ,EAAa0I,EAAYO,EAAU,gBACnClJ,EAAa2I,EAAYO,EAAU,cAEzC,OAAO,2BACAd,GADP,IAEIhH,MAAO8H,EACPjJ,aACAD,eAIR,IAAK,aACD,MAAO,CAAEA,WAAY,EAAGC,WAAY,EAAGmB,MAAO,IAElD,QACI,OAAOgH,ICrGJoB,EANKC,YAAgB,CAChCzD,UACAH,SACA9F,SCLE2J,EAAmBtC,OAAOuC,sCAAwCC,IAKzDC,EAHDC,YACVN,EAAaE,EAAiBK,YAAgBC,OCAlDC,IAASC,OACD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,QAKd/G,SAASqH,eAAe,W","file":"static/js/main.c4b37a95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","import React from \"react\";\r\nimport classNames from \"classnames\"\r\n\r\nfunction Button ({onClick, className, outline, children}){\r\n    return(\r\n<button\r\n    onClick={onClick}\r\n    className={classNames('button', className, {\r\n    'button--outline': outline,\r\n})}>\r\n    {children}\r\n</button>\r\n    )\r\n}\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport logoSvg from '../assets/img/pizza-logo.svg';\r\nimport Button from './Button';\r\n\r\nfunction Header() {\r\n    const { totalPrice, totalCount } = useSelector(({ cart }) => cart);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\">\r\n                    <div className=\"header__logo\">\r\n                        <img width=\"38\" src={logoSvg} alt=\"Pizza logo\" />\r\n                        <div>\r\n                            <h1>React Pizza</h1>\r\n                            <p>самая вкусная пицца во вселенной</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"header__cart\">\r\n                    <Link to=\"/cart\">\r\n                        <Button className=\"button--cart\">\r\n                            <span>{totalPrice} ₽</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Categories = React.memo(function Categories ({activeCategory, items, onClickCategory }) {\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"categories\">\r\n                <ul>\r\n                    <li className={activeCategory === null ? 'active' : ''} onClick={()=> onClickCategory(null)}>\r\n                        Все\r\n                    </li>\r\n                    {items &&\r\n                    items.map((name, index)=>(\r\n                        <li\r\n                            className={activeCategory === index ? 'active' : ''}\r\n                            onClick={()=> onClickCategory(index)}\r\n                            key={`${name}_${index}`}>\r\n                            {name}\r\n                        </li>\r\n                    ))}\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\nCategories.propTypes = {\r\n    // activeCategory: PropTypes.oneOf([PropTypes.number, null]),\r\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onClickCategory: PropTypes.func.isRequired,\r\n\r\n};\r\nCategories.defaultProps = {activeCategory: null, items: [] };\r\nexport default Categories;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SortPopup = React.memo(function SortPopup({ items, activeSortType, onClickSortType }) {\r\n    const [visiblePopup, setVisiblePopup] = React.useState(false);\r\n    const sortRef = React.useRef();\r\n    const activeLabel = items.find((obj) => obj.type === activeSortType).name;\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(!visiblePopup);\r\n    };\r\n\r\n    const handleOutsideClick = (event) => {\r\n        const path = event.path || (event.composedPath && event.composedPath());\r\n        if (!path.includes(sortRef.current)) {\r\n            setVisiblePopup(false);\r\n        }\r\n    };\r\n\r\n    const onSelectItem = (index) => {\r\n        if (onClickSortType) {\r\n            onClickSortType(index);\r\n        }\r\n        setVisiblePopup(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick);\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg\r\n                    className={visiblePopup ? 'rotated' : ''}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup && (\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {items &&\r\n                        items.map((obj, index) => (\r\n                            <li\r\n                                onClick={() => onSelectItem(obj)}\r\n                                className={activeSortType === obj.type ? 'active' : ''}\r\n                                key={`${obj.type}_${index}`}>\r\n                                {obj.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nSortPopup.propTypes = {\r\n    activeSortType: PropTypes.string.isRequired,\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClickSortType: PropTypes.func.isRequired,\r\n};\r\n\r\nSortPopup.defaultProps = {\r\n    items: [],\r\n};\r\n\r\nexport default SortPopup;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst CartItem = ({ id, name, type, size, totalPrice, totalCount, onRemove, onMinus, onPlus }) => {\r\n    const handleRemoveClick = () => {\r\n        onRemove(id);\r\n    };\r\n\r\n    const handlePlusItem = () => {\r\n        onPlus(id);\r\n    };\r\n\r\n    const handleMinusItem = () => {\r\n        onMinus(id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n                <p>\r\n                    {type} тесто, {size} см.\r\n                </p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div\r\n                    onClick={handleMinusItem}\r\n                    className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <b>{totalCount}</b>\r\n                <div\r\n                    onClick={handlePlusItem}\r\n                    className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice} ₽</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <Button onClick={handleRemoveClick} className=\"button--circle\" outline>\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Button from '../Button';\r\n\r\nfunction PizzaBlock({ id, name, imageUrl, price, types, sizes, onClickAddPizza, addedCount }) {\r\n    const availableTypes = ['тонкое', 'традиционное'];\r\n    const availableSizes = [26, 30, 40];\r\n\r\n    const [activeType, setActiveType] = React.useState(types[0]);\r\n    const [activeSize, setActiveSize] = React.useState(0);\r\n\r\n    const onSelectType = (index) => {\r\n        setActiveType(index);\r\n    };\r\n\r\n    const onSelectSize = (index) => {\r\n        setActiveSize(index);\r\n    };\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            size: availableSizes[activeSize],\r\n            type: availableTypes[activeType],\r\n        };\r\n        onClickAddPizza(obj);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img className=\"pizza-block__image\" src={imageUrl} alt=\"Pizza\" />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {availableTypes.map((type, index) => (\r\n                        <li\r\n                            key={type}\r\n                            onClick={() => onSelectType(index)}\r\n                            className={classNames({\r\n                                active: activeType === index,\r\n                                disabled: !types.includes(index),\r\n                            })}>\r\n                            {type}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul>\r\n                    {availableSizes.map((size, index) => (\r\n                        <li\r\n                            key={size}\r\n                            onClick={() => onSelectSize(index)}\r\n                            className={classNames({\r\n                                active: activeSize === index,\r\n                                disabled: !sizes.includes(size),\r\n                            })}>\r\n                            {size} см.\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от {price} ₽</div>\r\n                <Button onClick={onAddPizza} className=\"button--add\" outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nPizzaBlock.propTypes = {\r\n    name: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    price: PropTypes.number,\r\n    types: PropTypes.arrayOf(PropTypes.number),\r\n    sizes: PropTypes.arrayOf(PropTypes.number),\r\n    onClickAddPizza: PropTypes.func,\r\n    addedCount: PropTypes.number,\r\n};\r\n\r\nPizzaBlock.defaultProps = {\r\n    name: '---',\r\n    price: 0,\r\n    types: [],\r\n    sizes: [],\r\n};\r\n\r\nexport default PizzaBlock;","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nfunction LoadingBlock(){\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\"\r\n        >\r\n            <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n            <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\r\n            <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\r\n            <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n        </ContentLoader>\r\n    )\r\n}\r\nexport default LoadingBlock;","import axios from 'axios';\r\n\r\nexport const setLoaded = (payload) => ({\r\n    type: 'SET_LOADED',\r\n    payload,\r\n});\r\n\r\nexport const fetchPizzas = (sortBy, category) => (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_LOADED',\r\n        payload: false,\r\n    });\r\n\r\n    axios\r\n        .get(\r\n            `http://localhost:3001/pizzas?${category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${\r\n                sortBy.order\r\n            }`,\r\n        )\r\n        .then(({ data }) => {\r\n            dispatch(setPizzas(data));\r\n        });\r\n};\r\n\r\nexport const setPizzas = (items) => ({\r\n    type: 'SET_PIZZAS',\r\n    payload: items,\r\n});","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Categories, SortPopup, PizzaBlock, PizzaLoadingBlock } from '../components';\r\n\r\nimport { setCategory, setSortBy } from '../redux/actions/filters';\r\nimport { fetchPizzas } from '../redux/actions/pizzas';\r\nimport { addPizzaToCart } from '../redux/actions/cart';\r\n\r\nconst categoryNames = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые'];\r\nconst sortIems = [\r\n    { name: 'популярности', type: 'popular', order: 'desc' },\r\n    { name: 'цене', type: 'price', order: 'desc' },\r\n    { name: 'алфавит', type: 'name', order: 'asc' },\r\n];\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(({ pizzas }) => pizzas.items);\r\n    const cartItems = useSelector(({ cart }) => cart.items);\r\n    const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\r\n    const { category, sortBy } = useSelector(({ filters }) => filters);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPizzas(sortBy, category));\r\n    }, [category, sortBy]);\r\n\r\n    const onSelectCategory = React.useCallback((index) => {\r\n        dispatch(setCategory(index));\r\n    }, []);\r\n\r\n    const onSelectSortType = React.useCallback((type) => {\r\n        dispatch(setSortBy(type));\r\n    }, []);\r\n\r\n    const handleAddPizzaToCart = (obj) => {\r\n        dispatch({\r\n            type: 'ADD_PIZZA_CART',\r\n            payload: obj,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories\r\n                    activeCategory={category}\r\n                    onClickCategory={onSelectCategory}\r\n                    items={categoryNames}\r\n                />\r\n                <SortPopup\r\n                    activeSortType={sortBy.type}\r\n                    items={sortIems}\r\n                    onClickSortType={onSelectSortType}\r\n                />\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {isLoaded\r\n                    ? items.map((obj) => (\r\n                        <PizzaBlock\r\n                            onClickAddPizza={handleAddPizzaToCart}\r\n                            key={obj.id}\r\n                            addedCount={cartItems[obj.id] && cartItems[obj.id].items.length}\r\n                            {...obj}\r\n                        />\r\n                    ))\r\n                    : Array(12)\r\n                        .fill(0)\r\n                        .map((_, index) => <PizzaLoadingBlock key={index} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export const setSortBy = ({type, order}) => ({\r\n    type: 'SET_SORT_BY',\r\n    payload: {type, order},\r\n})\r\n\r\nexport const setCategory = (catIndex) => ({\r\n    type: 'SET_CATEGORY',\r\n    payload: catIndex,\r\n})\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport cartEmptyImage from '../assets/img/empty-cart.png';\r\nimport { CartItem, Button } from '../components';\r\nimport { clearCart, removeCartItem, plusCartItem, minusCartItem } from '../redux/actions/cart';\r\n\r\nfunction Cart() {\r\n    const dispatch = useDispatch();\r\n    const { totalPrice, totalCount, items } = useSelector(({ cart }) => cart);\r\n\r\n    const addedPizzas = Object.keys(items).map((key) => {\r\n        return items[key].items[0];\r\n    });\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n            dispatch(clearCart());\r\n        }\r\n    };\r\n\r\n    const onRemoveItem = (id) => {\r\n        if (window.confirm('Вы действительно хотите удалить?')) {\r\n            dispatch(removeCartItem(id));\r\n        }\r\n    };\r\n\r\n    const onPlusItem = (id) => {\r\n        dispatch(plusCartItem(id));\r\n    };\r\n\r\n    const onMinusItem = (id) => {\r\n        dispatch(minusCartItem(id));\r\n    };\r\n\r\n    const onClickOrder = () => {\r\n        console.log('ВАШ ЗАКАЗ', items);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container container--cart\">\r\n            {totalCount ? (\r\n                <div className=\"cart\">\r\n                    <div className=\"cart__top\">\r\n                        <h2 className=\"content__title\">\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            Корзина\r\n                        </h2>\r\n                        <div className=\"cart__clear\">\r\n                            <svg\r\n                                width=\"20\"\r\n                                height=\"20\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M2.5 5H4.16667H17.5\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M8.33337 9.16667V14.1667\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M11.6666 9.16667V14.1667\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n\r\n                            <span onClick={onClearCart}>Очистить корзину</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content__items\">\r\n                        {addedPizzas.map((obj) => (\r\n                            <CartItem\r\n                                key={obj.id}\r\n                                id={obj.id}\r\n                                name={obj.name}\r\n                                type={obj.type}\r\n                                size={obj.size}\r\n                                totalPrice={items[obj.id].totalPrice}\r\n                                totalCount={items[obj.id].items.length}\r\n                                onRemove={onRemoveItem}\r\n                                onMinus={onMinusItem}\r\n                                onPlus={onPlusItem}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"cart__bottom\">\r\n                        <div className=\"cart__bottom-details\">\r\n              <span>\r\n                Всего пицц: <b>{totalCount} шт.</b>\r\n              </span>\r\n                            <span>\r\n                Сумма заказа: <b>{totalPrice} ₽</b>\r\n              </span>\r\n                        </div>\r\n                        <div className=\"cart__bottom-buttons\">\r\n                            <a href=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                <svg\r\n                                    width=\"8\"\r\n                                    height=\"14\"\r\n                                    viewBox=\"0 0 8 14\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M7 13L1 6.93015L6.86175 1\"\r\n                                        stroke=\"#D3D3D3\"\r\n                                        strokeWidth=\"1.5\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                                <Link to=\"/\">\r\n                                    <span>Вернуться назад</span>\r\n                                </Link>\r\n                            </a>\r\n                            <Button onClick={onClickOrder} className=\"pay-btn\">\r\n                                <span>Оплатить сейчас</span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"cart cart--empty\">\r\n                    <h2>\r\n                        Корзина пустая <i>😕</i>\r\n                    </h2>\r\n                    <p>\r\n                        Вероятней всего, вы не заказывали ещё пиццу.\r\n                        <br />\r\n                        Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                    </p>\r\n                    <img src={cartEmptyImage} alt=\"Empty cart\" />\r\n                    <Link to=\"/\" className=\"button button--black\">\r\n                        <span>Вернуться назад</span>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","export const addPizzaToCart = (pizzaObj) => ({\r\n    type: 'ADD_PIZZA_CART',\r\n    payload: pizzaObj,\r\n});\r\n\r\nexport const clearCart = () => ({\r\n    type: 'CLEAR_CART',\r\n});\r\n\r\nexport const removeCartItem = (id) => ({\r\n    type: 'REMOVE_CART_ITEM',\r\n    payload: id,\r\n});\r\n\r\nexport const plusCartItem = (id) => ({\r\n    type: 'PLUS_CART_ITEM',\r\n    payload: id,\r\n});\r\n\r\nexport const minusCartItem = (id) => ({\r\n    type: 'MINUS_CART_ITEM',\r\n    payload: id,\r\n});","import React from 'react';\nimport {Header} from \"./components\";\nimport {Home, Cart} from \"./pages\";\nimport {Route} from 'react-router-dom';\n\nfunction App ( ) {\n        return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"content\">\n                <Route path=\"/\" component={Home} exact/>\n                <Route path=\"/cart\" component={Cart} exact/>\n            </div>\n        </div>\n    );\n}\nexport default App;\n\n","const initialState = {\r\n    category: null,\r\n    sortBy: {\r\n        type: 'popular',\r\n        order: 'desc',\r\n    },\r\n};\r\n\r\nconst filtersReducer = (state = initialState, action) => {\r\n    if (action.type === 'SET_SORT_BY') {\r\n        return {\r\n            ...state,\r\n            sortBy: action.payload,\r\n        };\r\n    }\r\n    if (action.type === 'SET_CATEGORY') {\r\n        return {\r\n            ...state,\r\n            category: action.payload,\r\n        };\r\n    }\r\n    return state;\r\n\r\n};\r\nexport default filtersReducer;","const initialState = {\r\n    items: [],\r\n    isLoaded: false\r\n\r\n};\r\n\r\nconst pizzasReducer = (state = initialState, action) => {\r\n    if (action.type === 'SET_PIZZAS') {\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            isLoaded: true,\r\n\r\n        };\r\n    }\r\n    return state;\r\n\r\n};\r\nexport default pizzasReducer;","const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n};\r\n\r\nconst getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\r\n\r\nconst _get = (obj, path) => {\r\n    const [firstKey, ...keys] = path.split('.');\r\n    return keys.reduce((val, key) => {\r\n        return val[key];\r\n    }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj, path) => {\r\n    return Object.values(obj).reduce((sum, obj) => {\r\n        const value = _get(obj, path);\r\n        return sum + value;\r\n    }, 0);\r\n};\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PIZZA_CART': {\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload];\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems),\r\n                },\r\n            };\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice,\r\n            };\r\n        }\r\n\r\n        case 'REMOVE_CART_ITEM': {\r\n            const newItems = {\r\n                ...state.items,\r\n            };\r\n            const currentTotalPrice = newItems[action.payload].totalPrice;\r\n            const currentTotalCount = newItems[action.payload].items.length;\r\n            delete newItems[action.payload];\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount,\r\n            };\r\n        }\r\n\r\n        case 'PLUS_CART_ITEM': {\r\n            const newObjItems = [\r\n                ...state.items[action.payload].items,\r\n                state.items[action.payload].items[0],\r\n            ];\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems),\r\n                },\r\n            };\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice,\r\n            };\r\n        }\r\n\r\n        case 'MINUS_CART_ITEM': {\r\n            const oldItems = state.items[action.payload].items;\r\n            const newObjItems =\r\n                oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems),\r\n                },\r\n            };\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice,\r\n            };\r\n        }\r\n\r\n        case 'CLEAR_CART':\r\n            return { totalPrice: 0, totalCount: 0, items: {} };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cart;","\r\nimport { combineReducers } from 'redux';\r\n\r\nimport filters from './filters';\r\nimport pizzas from './pizzas';\r\nimport cart from './cart';\r\n\r\nconst rootReducer = combineReducers({\r\n    filters,\r\n    pizzas,\r\n    cart,\r\n});\r\n\r\nexport default rootReducer;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/app.scss';\nimport App from './App';\nimport {BrowserRouter as Router, } from 'react-router-dom'\nimport store from \"./redux/store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n        <Router>\n            <Provider store={store}>\n                <App />\n            </Provider>\n\n      </Router>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}